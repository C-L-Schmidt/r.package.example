---
name: Check üõ†

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  push:
    branches:
      - main
      - codespaces_conf

# This reusable workflow from insightsengineering/r.pkg.template will run once a PR to main branch is created.
jobs:
  job-setup:
    name: Should we run R CMD check?
    runs-on: ubuntu-latest
    outputs:
      check_out: ${{ steps.check.outputs.run_r_cmd_check }}
    steps:
      - name: To check or not to check?
        id: check
        run: |
          echo "run_r_cmd_check=true" >> $GITHUB_OUTPUT

  r-cmd:
    name: R CMD Check üß¨
    needs: job-setup
    # Call a workflow from a given GitHub repository, from a given branch (or tag).
    uses: insightsengineering/r.pkg.template/.github/workflows/build-check-install.yaml@main
    if: >
      needs.job-setup.outputs.check_out == 'true'

  job-setup-with-docker:
    name: Let's run R CMD check using containers
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/user-workshop-cicd/r-pkg-example:4.3"

    steps:
      # note : we can not use reusable workflow build-check-install.yaml@main within container context (only actions)
      - name: Checkout repo
        uses: actions/checkout@v4.1.1
        with:
          path: ${{ github.event.repository.name }}

      - name: debug
        run: |
          ls "$GITHUB_WORKSPACE/r.package.example"

      - name: Get package name üì¶
        id: package-name
        run: |
          PKGBUILD="$(Rscript -e 'cat(sprintf("%s_%s.tar.gz",(dcf <- read.dcf("DESCRIPTION"))[,"Package"], dcf[,"Version"]))')"
          echo "PKGBUILD = $PKGBUILD"
          echo "pkgbuild=$PKGBUILD" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: ${{ github.event.repository.name }}

      # Build a package stored in a directory called ${{ github.event.repository.name }}
      # --no-manual --no-build-vignettes because this requires LaTeX.
      - name: Build R package üèó
        run: |
          R CMD build --no-manual --no-build-vignettes "$GITHUB_WORKSPACE/r.package.example"
          ls -l
        shell: bash

      # Check `.tar.gz` package built in previous step.
      # --no-manual --no-vignettes because this requires LaTeX.
      - name: Check R package üèÅ
        run: |
          echo "Let's run R CMD check..."
          R CMD check --no-manual --no-build-vignettes ${{ steps.package-name.outputs.pkgbuild }}
        shell: bash
